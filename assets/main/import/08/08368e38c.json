[1,["a3zQCfCrBCDZJ4uf2rk5u8","fcDMOQo7FICq2CTMUyP/yh","c89m0XNRpI2qEsAhLShXXE","b3AQzOaldLQLIMcVWQiCX6","d79BhkdNRDD6rBc+29eY+I","c3KTtUYW9ExKNPEKEJNLbu","deoeNsb3JJ05/QV6RkBRZ6","d4q9L4QoVCv5pKTAinRKHt","2bnew4ZhFHSaTFJ04q+BUZ","36IYJOBQlCYbBbXJwghzOX","41SOOrpmhIfJ5xnLXZUvrZ","09GT9oWkFMNqezaHKtQrp7@b47c0","bfRftMY0ZO55Khq4DYZZGR@b47c0","12Y9dMgWdJKJGmTiZyQR9H@17020","f9eO/nMjBMIYk1cKKIOH0D"],["node","targetInfo","_effectAsset","_cameraComponent","_postProcess","sphere","light","loader","root","scene","_parent","_material","asset","assets","_envmapHDR","_diffuseMapHDR","_mesh"],[["cc.Node",["_name","_id","_layer","_parent","_components","_lpos","_children","_lrot","_euler","_lscale"],0,1,9,5,2,5,5,5],["cc.Node",["_name","_id","_parent","_components","_children","_lscale","_lpos"],1,1,2,2,5,5],["cc.Node",["_name","_id","_objFlags","__editorExtras__","_components","_parent","_prefab"],-1,12,1,4],["cc.Camera",["_far","_clearFlags","_visibility","_near","_usePostProcess","_projection","_priority","_orthoHeight","node","_color","_postProcess"],-5,1,5,1],["cc.MeshRenderer",["_name","_shadowCastingMode","_enabled","_shadowReceivingMode","node","_materials","bakeSettings"],-1,1,3,4],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.JsonAsset",["_name","json"],1],["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.SceneAsset",["_name"],2],["cc.HBAO",["_radiusScale","_aoSaturation","_needBlur","node"],0,1],["cc.Bloom",["_threshold","_intensity","node"],1,1],["cc.ColorGrading",["_enabled","node"],2,1],["cc.BlitScreen",["node","_activeMaterials","_materials"],3,1,3,9],["cc.BlitScreenMaterial",["_material"],3,6],["cc.FSR",["node"],3,1],["cc.FXAA",["node"],3,1],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.PrefabInfo",["root","asset","fileId","instance","targetOverrides","nestedPrefabInstanceRoots"],-2,2],["cc.PrefabInfo",["fileId","targetOverrides","nestedPrefabInstanceRoots","root","instance","asset"],0,1,4,6],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree","skin","lightProbeInfo","postSettings"],3,4,4,4,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_groundAlbedoHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5,5],["cc.ShadowsInfo",["_enabled","_type","_shadowColor"],1,5],["cc.SkyboxInfo",["_envLightingType","_enabled","_rotationAngle","_envmapHDR","_diffuseMapHDR"],0,6,6],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.SkinInfo",["_enabled"],2],["cc.LightProbeInfo",[],3],["cc.PostSettingsInfo",[],3],["cc.UITransform",["node","_contentSize"],3,1,5],["cc.Canvas",["node","_cameraComponent"],3,1,1],["cc.Widget",["_alignFlags","node"],2,1],["abfd2D0ZVdBhLiehdgZ9gH/",["_enabled","wheelScale","elastic","rotateSpeed","maxDistance","minDistance","node","target"],-3,1,1],["a02524pHuhLGasHrOolsTWo",["zoomSpeed","_minPolar","_maxPolar","node","target"],0,1,1],["cc.PrefabInstance",["fileId","prefabRootNode","mountedComponents","propertyOverrides"],1,9,9],["cc.MountedComponentsInfo",["targetInfo","components"],3,4,9],["cc.TargetInfo",["localID"],2],["5142bjrodhHkY28+iuKSAA2",["node","loader","postProcess","light","sphere","assets"],3,1,1,1,1,1,6],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["cc.DirectionalLight",["_colorTemperature","_shadowEnabled","_shadowPcf","_shadowBias","_shadowDistance","node","_color","_staticSettings"],-2,1,5,4],["cc.StaticLightSettings",["_castShadow"],2],["cc.ModelBakeSettings",["_castShadow","_receiveShadow"],1],["cc.PostProcess",["node"],3,1],["ad65aF5HLlN0qWj0Fv9ONfH",["node","materials"],3,1,3],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[36,0,2],[38,0,1,2,3],[39,0,1,2,2],[41,0,1,2,3],[7,0,1,2,3,4],[8,0,1,2,3,5],[0,0,1,3,4,5,7,8,3],[40,0,1,2,2],[44,0,1,3],[5,0,1,2,3],[6,0,1,3],[9,0,2],[2,0,1,4,3],[2,2,3,5,6,3],[0,0,2,1,3,6,4,5,4],[0,0,3,4,9,2],[1,0,1,2,4,3,3],[1,0,1,2,3,5,3],[1,0,2,3,6,2],[10,0,1,2,3,4],[11,0,1,2,3],[12,0,1,2],[13,0,1,2,1],[14,0,1],[15,0,1],[16,0,1],[17,0,1,2,3,2],[18,0,1,2,3,4,5,6],[19,0,1,2,3,4,5,4],[20,0,1,2,3,4,5,6,7,1],[21,0,1,2,3,4,2],[22,0,1,2,3],[23,0,1,2,3,4,4],[24,1],[25,1],[26,0,2],[27,1],[28,1],[29,0,1,1],[30,0,1,1],[31,0,1,2],[3,3,0,1,2,4,8,9,10,6],[3,5,6,7,0,1,2,8,9,7],[32,0,1,2,3,4,5,6,7,7],[33,0,1,2,3,4,4],[34,0,1,2,3,3],[35,0,1,1],[37,0,1,2,3,4,5,1],[42,0,1,2,3,4,5,6,7,6],[43,0,2],[4,0,1,4,5,6,3],[4,0,2,3,4,5,6,4],[45,0,1],[46,0,1,1],[47,0,1,2,4]],[[[[9,".bin",815868016,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":72464,"length":14280,"count":7140,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":72464,"count":1294,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.49748557806015015,-0.5,-0.4989933371543884],"maxPosition",8,[1,0.49949654936790466,0.5,0.49899348616600037]]],-1],0,0,[],[],[]],[[[10,"assets",[{"name":"plane","host":"https://opsiatech.github.io/RodinViewerTest/","url":"res/plane.glb","materials":[{"name":"pbr","albedoMap":"res/plane_albedo.png","pbrMap":"res/plane_pbr.png"},{"name":"toon","baseColorMap":"res/plane_albedo.png"}]},{"name":"S1","host":"https://opsiatech.github.io/RodinViewerTest/","url":"res/S1_pbr.glb","materials":[{"name":"pbr","albedoMap":"res/S1_pbr_albedo.png","pbrMap":"res/S1_pbr_pbr.png"},{"name":"shaded","mainTexture":"res/S1_shaded_BaseColor.png"},{"name":"toon","baseColorMap":"res/S1_pbr_albedo.png"}]},{"name":"S2","host":"https://opsiatech.github.io/RodinViewerTest/","url":"res/S2_pbr.glb","materials":[{"name":"pbr","albedoMap":"res/S2_pbr_albedo.png","pbrMap":"res/S2_pbr_pbr.png"},{"name":"shaded","mainTexture":"res/S2_shaded_BaseColor.png"},{"name":"toon","baseColorMap":"res/S2_pbr_albedo.png"}]},{"name":"S3","host":"https://opsiatech.github.io/RodinViewerTest/","url":"res/S3_pbr.glb","materials":[{"name":"pbr","albedoMap":"res/S3_pbr_albedo.png","pbrMap":"res/S3_pbr_pbr.png"},{"name":"shaded","mainTexture":"res/S3_shaded_BaseColor.png"},{"name":"toon","baseColorMap":"res/S3_pbr_albedo.png"}]},{"name":"S4","host":"https://opsiatech.github.io/RodinViewerTest/","url":"res/S4_pbr.glb","materials":[{"name":"pbr","albedoMap":"res/S4_pbr_albedo.png","pbrMap":"res/S4_pbr_pbr.png"},{"name":"shaded","mainTexture":"res/S4_shaded_BaseColor.png"},{"name":"toon","baseColorMap":"res/S4_pbr_albedo.png"}]},{"name":"S5","host":"https://opsiatech.github.io/RodinViewerTest/","url":"res/S5_pbr.glb","materials":[{"name":"pbr","albedoMap":"res/S5_pbr_albedo.png","pbrMap":"res/S5_pbr_pbr.png"},{"name":"shaded","mainTexture":"res/S5_shaded_BaseColor.png"},{"name":"toon","baseColorMap":"res/S5_pbr_albedo.png"}]},{"name":"chair","host":"https://opsiatech.github.io/RodinViewerTest/","url":"res/chair.glb","materials":[{"name":"pbr","albedoMap":"res/chair_albedo.png","pbrMap":"res/chair_pbr.png"},{"name":"shaded","mainTexture":"res/chair_shaded.png"},{"name":"toon","baseColorMap":"res/chair_albedo.png"}]}]]],0,0,[],[],[]],[[[4,"back",[{"rasterizerState":{"cullMode":1},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{},{},{}],[[[{},"mainColor",8,[4,4294167205]],{},{}],11,0,0]]],0,0,[0],[2],[0]],[[[4,"pbr",[{"rasterizerState":{"shadeModel":1},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true,"USE_PBR_MAP":true},{},{},{},{},{}],[[[{"metallic":0.8,"specularIntensity":0.65},"albedoScale",8,[1,0.502,0.502,0.502]],{},{},{},{},{}],11,0,0,0,0,0]]],0,0,[0],[2],[2]],[[[5,"shaded",[{},{},{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true},{},{}]]],0,0,[0],[2],[0]],[[[11,"loader"],[12,"postprocess","efe2E/lJxNaJyJ22/SXjLp",[[-1,[19,0.2,0.6,false,-2],[20,0.88,1.2,-3],[21,false,-4],[22,-5,[1],[[23,2]]],[24,-6],[25,-7]],1,4,4,4,4,4,4]],[26,"loader",[-9,-10,-11,1,-12,-13],[27,null,null,"f843877e-a7b6-461d-ae12-7100ef9db154",null,null,[-8]],[29,[30,0.8,[2,1.02012,1.011342,1.153244,0.520833125],[2,0.382114,0.307398,0.221017,0],[2,0.452588,0.607642,0.755699,0.8],[2,0.618555,0.577848,0.544564,0]],[31,true,1,[4,4283190348]],[32,2,true,60,10,11],[33],[34],[35,false],[36],[37]]],[14,"Canvas",33554432,"d3wf354QRAZqzQGrzZAUfD",2,[-18,-19],[[38,-14,[5,1280,1280]],[39,-16,-15],[40,45,-17]],[1,640,640,0]],[16,"Loader","8atnHb3F9Kdp20tKmKSqMi",2,[-21],[-20]],[6,"Main Camera","c9DMICJLFO5IeO07EPon7U",2,[[41,0.1,500,14,1822425087,true,-23,[4,4291743487],-22],[43,false,0.012,0.5,1.2,25,1.6,-24,4],[44,0.5,0.3490658503988659,1.5707963267948966,-25,4]],[1,0,3.392,9.033],[3,-0.11320321376790672,0,0,0.9935718556765875],[1,-13,0,0]],[13,0,{},3,[28,"182iwEXG9EupHC7kkISJ79",null,null,-36,[45,"0dNBYtGsFGG7k6mWzRudey",null,[[46,[0,["182iwEXG9EupHC7kkISJ79"]],[[47,-35,-34,1,-33,-32,9]]]],[[1,"EasyMenu",["_name"],[0,["182iwEXG9EupHC7kkISJ79"]]],[2,["_lpos"],[0,["182iwEXG9EupHC7kkISJ79"]],[1,425,610,0]],[2,["_lrot"],[0,["182iwEXG9EupHC7kkISJ79"]],[3,0,0,0,1]],[7,["_euler"],-26,[1,0,0,0]],[1,1,["_paddingTop"],[0,["08FQUs9GFB+56qO6SGTT5R"]]],[2,["_contentSize"],[0,["01vF+XagJC36s8dPIvHKOH"]],[5,300,0]],[3,1,["_spacingY"],-27],[1,30,["_top"],[0,["75fMEv175Py67wjt894OJz"]]],[1,20,["_right"],[0,["75fMEv175Py67wjt894OJz"]]],[2,["_size"],[0,["f656clF8tAxqPGTldfA93u"]],[5,230,24]],[3,false,["_affectedByScale"],-28],[3,1,["_resizeMode"],-29],[3,true,["_isAlign"],-30],[7,["_lscale"],-31,[1,1.3,1.3,1]]]],8]],[0,["08FQUs9GFB+56qO6SGTT5R"]],[6,"Main Light","c0y6F5f+pAvI805TdmxIjx",2,[[48,6500,true,2,0.0001,10,-37,[4,4293982975],[49,true]]],[1,0,0.496,1.093],[3,-0.27059805007309845,0.27059805007309845,0.6532814824381882,0.6532814824381883],[1,-90,90,45]],[17,"Sphere","6al27oBENDnaj1VySfkEC4",2,[-38],[1,50,50,50]],[50,"Sphere<ModelComponent>",1,9,[0],[8,true,true]],[52,1],[15,"wireframe",4,[[51,"Cube<ModelComponent>",false,0,-39,[3],[8,true,true]]],[1,1.001,1.001,1.001]],[53,4,[4,5,6,7]],[18,"Camera",3,[-40],[1,0,0,1000]],[42,0,1073741824,640,2000,6,41943040,14,[4,4278190080]],[0,["182iwEXG9EupHC7kkISJ79"]]],0,[0,-1,11,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,6,0,-1,9,0,-2,8,0,-3,5,0,-5,4,0,-6,3,0,0,3,0,3,15,0,0,3,0,0,3,0,-1,14,0,-2,6,0,-1,13,0,-1,12,0,4,11,0,0,5,0,0,5,0,0,5,0,1,16,0,1,7,0,1,7,0,1,7,0,1,7,0,1,16,0,5,10,0,6,8,0,7,13,0,0,6,0,8,6,0,0,8,0,-1,10,0,0,12,0,-1,15,0,9,2,1,10,2,40],[0,0,0,0,0,0,0,0,0,0,0,0,10],[-1,-1,11,-1,-1,-2,-3,-4,12,13,14,15,16],[3,1,1,4,5,6,7,8,9,10,11,12,13]],[[[54,"../materials/vignette",[{"hash":1307214445,"name":"../materials/vignette|vs|fs","blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"fragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"PostUBO","stageFlags":16,"binding":0,"members":[{"name":"texSize","type":16,"count":1},{"name":"params","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCameraMVR","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView2","typename":"mat4","type":25,"count":2,"precision":"highp ","isArray":true},{"name":"cc_matViewInv2","typename":"mat4","type":25,"count":2,"precision":"highp ","isArray":true},{"name":"cc_matProj2","typename":"mat4","type":25,"count":2,"precision":"highp ","isArray":true},{"name":"cc_matProjInv2","typename":"mat4","type":25,"count":2,"precision":"highp ","isArray":true},{"name":"cc_matViewProj2","typename":"mat4","type":25,"count":2,"precision":"highp ","isArray":true},{"name":"cc_matViewProjInv2","typename":"mat4","type":25,"count":2,"precision":"highp ","isArray":true},{"name":"cc_cameraPos2","typename":"vec4","type":16,"count":2,"precision":"highp ","isArray":true},{"name":"cc_surfaceTransform2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_screenScale2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_exposure2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_mainLitDir2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_mainLitColor2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_ambientSky2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_ambientGround2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_fogColor2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_fogBase2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_fogAdd2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_nearFar2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true},{"name":"cc_viewPort2","typename":"vec4","type":16,"count":2,"precision":"mediump ","isArray":true}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[{"name":"inputTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\n  #ifdef OP_MVR\n    layout(std140) uniform CCCameraMVR {\n      highp   mat4 cc_matView2[2];\n      highp   mat4 cc_matViewInv2[2];\n      highp   mat4 cc_matProj2[2];\n      highp   mat4 cc_matProjInv2[2];\n      highp   mat4 cc_matViewProj2[2];\n      highp   mat4 cc_matViewProjInv2[2];\n      highp   vec4 cc_cameraPos2[2];\n      mediump vec4 cc_surfaceTransform2[2];\n      mediump vec4 cc_screenScale2[2];\n      mediump vec4 cc_exposure2[2];\n      mediump vec4 cc_mainLitDir2[2];\n      mediump vec4 cc_mainLitColor2[2];\n      mediump vec4 cc_ambientSky2[2];\n      mediump vec4 cc_ambientGround2[2];\n      mediump vec4 cc_fogColor2[2];\n      mediump vec4 cc_fogBase2[2];\n      mediump vec4 cc_fogAdd2[2];\n      mediump vec4 cc_nearFar2[2];\n      mediump vec4 cc_viewPort2[2];\n    };\n      #define CC_MATVIEW cc_matView2[gl_ViewID_OVR]\n      #define CC_MATVIEWINV cc_matViewInv2[gl_ViewID_OVR]\n      #define CC_MATPROJ cc_matProj2[gl_ViewID_OVR]\n      #define CC_MATPROJINV cc_matProjInv2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJ cc_matViewProj2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJINV cc_matViewProjInv2[gl_ViewID_OVR]\n      #define CC_CAMERAPOS cc_cameraPos2[gl_ViewID_OVR]\n      #define CC_SURFACETRANSFORM cc_surfaceTransform2[gl_ViewID_OVR]\n      #define CC_SCREENSCALE cc_screenScale2[gl_ViewID_OVR]\n      #define CC_EXPOSURE cc_exposure2[gl_ViewID_OVR]\n      #define CC_MAINLITDIR cc_mainLitDir2[gl_ViewID_OVR]\n      #define CC_MAINLITCOLOR cc_mainLitColor2[gl_ViewID_OVR]\n      #define CC_AMBIENTSKY cc_ambientSky2[gl_ViewID_OVR]\n      #define CC_AMBIENTGROUND cc_ambientGround2[gl_ViewID_OVR]\n      #define CC_FOGCOLOR cc_fogColor2[gl_ViewID_OVR]\n      #define CC_FOGBASE cc_fogBase2[gl_ViewID_OVR]\n      #define CC_FOGADD cc_fogAdd2[gl_ViewID_OVR]\n      #define CC_NEARFAR cc_nearFar2[gl_ViewID_OVR]\n      #define CC_VIEWPORT cc_viewPort2[gl_ViewID_OVR]\n  #else\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n      #define CC_MATVIEW cc_matView\n      #define CC_MATVIEWINV cc_matViewInv\n      #define CC_MATPROJ cc_matProj\n      #define CC_MATPROJINV cc_matProjInv\n      #define CC_MATVIEWPROJ cc_matViewProj\n      #define CC_MATVIEWPROJINV cc_matViewProjInv\n      #define CC_CAMERAPOS cc_cameraPos\n      #define CC_SURFACETRANSFORM cc_surfaceTransform\n      #define CC_SCREENSCALE cc_screenScale\n      #define CC_EXPOSURE cc_exposure\n      #define CC_MAINLITDIR cc_mainLitDir\n      #define CC_MAINLITCOLOR cc_mainLitColor\n      #define CC_AMBIENTSKY cc_ambientSky\n      #define CC_AMBIENTGROUND cc_ambientGround\n      #define CC_FOGCOLOR cc_fogColor\n      #define CC_FOGBASE cc_fogBase\n      #define CC_FOGADD cc_fogAdd\n      #define CC_NEARFAR cc_nearFar\n      #define CC_VIEWPORT cc_viewPort\n  #endif\nout mediump vec2 v_uv;\nout mediump vec3 v_position;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  gl_Position = In.position;\n  v_position = gl_Position.xyz;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\n  #ifdef OP_MVR\n    layout(std140) uniform CCCameraMVR {\n      highp   mat4 cc_matView2[2];\n      highp   mat4 cc_matViewInv2[2];\n      highp   mat4 cc_matProj2[2];\n      highp   mat4 cc_matProjInv2[2];\n      highp   mat4 cc_matViewProj2[2];\n      highp   mat4 cc_matViewProjInv2[2];\n      highp   vec4 cc_cameraPos2[2];\n      mediump vec4 cc_surfaceTransform2[2];\n      mediump vec4 cc_screenScale2[2];\n      mediump vec4 cc_exposure2[2];\n      mediump vec4 cc_mainLitDir2[2];\n      mediump vec4 cc_mainLitColor2[2];\n      mediump vec4 cc_ambientSky2[2];\n      mediump vec4 cc_ambientGround2[2];\n      mediump vec4 cc_fogColor2[2];\n      mediump vec4 cc_fogBase2[2];\n      mediump vec4 cc_fogAdd2[2];\n      mediump vec4 cc_nearFar2[2];\n      mediump vec4 cc_viewPort2[2];\n    };\n      #define CC_MATVIEW cc_matView2[gl_ViewID_OVR]\n      #define CC_MATVIEWINV cc_matViewInv2[gl_ViewID_OVR]\n      #define CC_MATPROJ cc_matProj2[gl_ViewID_OVR]\n      #define CC_MATPROJINV cc_matProjInv2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJ cc_matViewProj2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJINV cc_matViewProjInv2[gl_ViewID_OVR]\n      #define CC_CAMERAPOS cc_cameraPos2[gl_ViewID_OVR]\n      #define CC_SURFACETRANSFORM cc_surfaceTransform2[gl_ViewID_OVR]\n      #define CC_SCREENSCALE cc_screenScale2[gl_ViewID_OVR]\n      #define CC_EXPOSURE cc_exposure2[gl_ViewID_OVR]\n      #define CC_MAINLITDIR cc_mainLitDir2[gl_ViewID_OVR]\n      #define CC_MAINLITCOLOR cc_mainLitColor2[gl_ViewID_OVR]\n      #define CC_AMBIENTSKY cc_ambientSky2[gl_ViewID_OVR]\n      #define CC_AMBIENTGROUND cc_ambientGround2[gl_ViewID_OVR]\n      #define CC_FOGCOLOR cc_fogColor2[gl_ViewID_OVR]\n      #define CC_FOGBASE cc_fogBase2[gl_ViewID_OVR]\n      #define CC_FOGADD cc_fogAdd2[gl_ViewID_OVR]\n      #define CC_NEARFAR cc_nearFar2[gl_ViewID_OVR]\n      #define CC_VIEWPORT cc_viewPort2[gl_ViewID_OVR]\n  #else\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n      #define CC_MATVIEW cc_matView\n      #define CC_MATVIEWINV cc_matViewInv\n      #define CC_MATPROJ cc_matProj\n      #define CC_MATPROJINV cc_matProjInv\n      #define CC_MATVIEWPROJ cc_matViewProj\n      #define CC_MATVIEWPROJINV cc_matViewProjInv\n      #define CC_CAMERAPOS cc_cameraPos\n      #define CC_SURFACETRANSFORM cc_surfaceTransform\n      #define CC_SCREENSCALE cc_screenScale\n      #define CC_EXPOSURE cc_exposure\n      #define CC_MAINLITDIR cc_mainLitDir\n      #define CC_MAINLITCOLOR cc_mainLitColor\n      #define CC_AMBIENTSKY cc_ambientSky\n      #define CC_AMBIENTGROUND cc_ambientGround\n      #define CC_FOGCOLOR cc_fogColor\n      #define CC_FOGBASE cc_fogBase\n      #define CC_FOGADD cc_fogAdd\n      #define CC_NEARFAR cc_nearFar\n      #define CC_VIEWPORT cc_viewPort\n  #endif\nin mediump vec2 v_uv;\nin mediump vec3 v_position;\nlayout(std140) uniform PostUBO {\n    vec4 texSize;\n    vec4 params;\n};\nuniform sampler2D inputTexture;\nlayout(location = 0) out vec4 fragColor;\nvoid main () {\n  vec2 uv = v_uv;\n  vec3 col = texture(inputTexture, v_uv).rgb;\n  uv *= 1.0 - uv.yx;\n  float vig = uv.x * uv.y * 30.0;\n  vig = pow(vig, 0.25);\n  vig = clamp(vig, 0.0, 1.0);\n  fragColor = vec4( col * vig, 1.0 );\n}"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n#endif\n#ifdef OP_MVR\n    uniform highp mat4 cc_matView2[2];\n  uniform highp mat4 cc_matViewInv2[2];\n  uniform highp mat4 cc_matProj2[2];\n  uniform highp mat4 cc_matProjInv2[2];\n  uniform highp mat4 cc_matViewProj2[2];\n  uniform highp mat4 cc_matViewProjInv2[2];\n  uniform highp vec4 cc_cameraPos2[2];\n  uniform mediump vec4 cc_surfaceTransform2[2];\n  uniform mediump vec4 cc_screenScale2[2];\n  uniform mediump vec4 cc_exposure2[2];\n  uniform mediump vec4 cc_mainLitDir2[2];\n  uniform mediump vec4 cc_mainLitColor2[2];\n  uniform mediump vec4 cc_ambientSky2[2];\n  uniform mediump vec4 cc_ambientGround2[2];\n  uniform mediump vec4 cc_fogColor2[2];\n  uniform mediump vec4 cc_fogBase2[2];\n  uniform mediump vec4 cc_fogAdd2[2];\n  uniform mediump vec4 cc_nearFar2[2];\n  uniform mediump vec4 cc_viewPort2[2];\n      #define CC_MATVIEW cc_matView2[gl_ViewID_OVR]\n      #define CC_MATVIEWINV cc_matViewInv2[gl_ViewID_OVR]\n      #define CC_MATPROJ cc_matProj2[gl_ViewID_OVR]\n      #define CC_MATPROJINV cc_matProjInv2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJ cc_matViewProj2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJINV cc_matViewProjInv2[gl_ViewID_OVR]\n      #define CC_CAMERAPOS cc_cameraPos2[gl_ViewID_OVR]\n      #define CC_SURFACETRANSFORM cc_surfaceTransform2[gl_ViewID_OVR]\n      #define CC_SCREENSCALE cc_screenScale2[gl_ViewID_OVR]\n      #define CC_EXPOSURE cc_exposure2[gl_ViewID_OVR]\n      #define CC_MAINLITDIR cc_mainLitDir2[gl_ViewID_OVR]\n      #define CC_MAINLITCOLOR cc_mainLitColor2[gl_ViewID_OVR]\n      #define CC_AMBIENTSKY cc_ambientSky2[gl_ViewID_OVR]\n      #define CC_AMBIENTGROUND cc_ambientGround2[gl_ViewID_OVR]\n      #define CC_FOGCOLOR cc_fogColor2[gl_ViewID_OVR]\n      #define CC_FOGBASE cc_fogBase2[gl_ViewID_OVR]\n      #define CC_FOGADD cc_fogAdd2[gl_ViewID_OVR]\n      #define CC_NEARFAR cc_nearFar2[gl_ViewID_OVR]\n      #define CC_VIEWPORT cc_viewPort2[gl_ViewID_OVR]\n  #else\n  uniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matViewInv;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matProjInv;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp mat4 cc_matViewProjInv;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_surfaceTransform;\n  uniform mediump vec4 cc_screenScale;\n  uniform mediump vec4 cc_exposure;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\n  uniform mediump vec4 cc_ambientGround;\n  uniform mediump vec4 cc_fogColor;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n  uniform mediump vec4 cc_nearFar;\n  uniform mediump vec4 cc_viewPort;\n      #define CC_MATVIEW cc_matView\n      #define CC_MATVIEWINV cc_matViewInv\n      #define CC_MATPROJ cc_matProj\n      #define CC_MATPROJINV cc_matProjInv\n      #define CC_MATVIEWPROJ cc_matViewProj\n      #define CC_MATVIEWPROJINV cc_matViewProjInv\n      #define CC_CAMERAPOS cc_cameraPos\n      #define CC_SURFACETRANSFORM cc_surfaceTransform\n      #define CC_SCREENSCALE cc_screenScale\n      #define CC_EXPOSURE cc_exposure\n      #define CC_MAINLITDIR cc_mainLitDir\n      #define CC_MAINLITCOLOR cc_mainLitColor\n      #define CC_AMBIENTSKY cc_ambientSky\n      #define CC_AMBIENTGROUND cc_ambientGround\n      #define CC_FOGCOLOR cc_fogColor\n      #define CC_FOGBASE cc_fogBase\n      #define CC_FOGADD cc_fogAdd\n      #define CC_NEARFAR cc_nearFar\n      #define CC_VIEWPORT cc_viewPort\n  #endif\nvarying mediump vec2 v_uv;\nvarying mediump vec3 v_position;\nvoid main () {\n  StandardVertInput In;\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  gl_Position = In.position;\n  v_position = gl_Position.xyz;\n  v_uv = a_texCoord;\n}","frag":"\nprecision highp float;\n#ifdef OP_MVR\n    uniform highp mat4 cc_matView2[2];\n  uniform highp mat4 cc_matViewInv2[2];\n  uniform highp mat4 cc_matProj2[2];\n  uniform highp mat4 cc_matProjInv2[2];\n  uniform highp mat4 cc_matViewProj2[2];\n  uniform highp mat4 cc_matViewProjInv2[2];\n  uniform highp vec4 cc_cameraPos2[2];\n  uniform mediump vec4 cc_surfaceTransform2[2];\n  uniform mediump vec4 cc_screenScale2[2];\n  uniform mediump vec4 cc_exposure2[2];\n  uniform mediump vec4 cc_mainLitDir2[2];\n  uniform mediump vec4 cc_mainLitColor2[2];\n  uniform mediump vec4 cc_ambientSky2[2];\n  uniform mediump vec4 cc_ambientGround2[2];\n  uniform mediump vec4 cc_fogColor2[2];\n  uniform mediump vec4 cc_fogBase2[2];\n  uniform mediump vec4 cc_fogAdd2[2];\n  uniform mediump vec4 cc_nearFar2[2];\n  uniform mediump vec4 cc_viewPort2[2];\n      #define CC_MATVIEW cc_matView2[gl_ViewID_OVR]\n      #define CC_MATVIEWINV cc_matViewInv2[gl_ViewID_OVR]\n      #define CC_MATPROJ cc_matProj2[gl_ViewID_OVR]\n      #define CC_MATPROJINV cc_matProjInv2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJ cc_matViewProj2[gl_ViewID_OVR]\n      #define CC_MATVIEWPROJINV cc_matViewProjInv2[gl_ViewID_OVR]\n      #define CC_CAMERAPOS cc_cameraPos2[gl_ViewID_OVR]\n      #define CC_SURFACETRANSFORM cc_surfaceTransform2[gl_ViewID_OVR]\n      #define CC_SCREENSCALE cc_screenScale2[gl_ViewID_OVR]\n      #define CC_EXPOSURE cc_exposure2[gl_ViewID_OVR]\n      #define CC_MAINLITDIR cc_mainLitDir2[gl_ViewID_OVR]\n      #define CC_MAINLITCOLOR cc_mainLitColor2[gl_ViewID_OVR]\n      #define CC_AMBIENTSKY cc_ambientSky2[gl_ViewID_OVR]\n      #define CC_AMBIENTGROUND cc_ambientGround2[gl_ViewID_OVR]\n      #define CC_FOGCOLOR cc_fogColor2[gl_ViewID_OVR]\n      #define CC_FOGBASE cc_fogBase2[gl_ViewID_OVR]\n      #define CC_FOGADD cc_fogAdd2[gl_ViewID_OVR]\n      #define CC_NEARFAR cc_nearFar2[gl_ViewID_OVR]\n      #define CC_VIEWPORT cc_viewPort2[gl_ViewID_OVR]\n  #else\n  uniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matViewInv;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matProjInv;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp mat4 cc_matViewProjInv;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_surfaceTransform;\n  uniform mediump vec4 cc_screenScale;\n  uniform mediump vec4 cc_exposure;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\n  uniform mediump vec4 cc_ambientGround;\n  uniform mediump vec4 cc_fogColor;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n  uniform mediump vec4 cc_nearFar;\n  uniform mediump vec4 cc_viewPort;\n      #define CC_MATVIEW cc_matView\n      #define CC_MATVIEWINV cc_matViewInv\n      #define CC_MATPROJ cc_matProj\n      #define CC_MATPROJINV cc_matProjInv\n      #define CC_MATVIEWPROJ cc_matViewProj\n      #define CC_MATVIEWPROJINV cc_matViewProjInv\n      #define CC_CAMERAPOS cc_cameraPos\n      #define CC_SURFACETRANSFORM cc_surfaceTransform\n      #define CC_SCREENSCALE cc_screenScale\n      #define CC_EXPOSURE cc_exposure\n      #define CC_MAINLITDIR cc_mainLitDir\n      #define CC_MAINLITCOLOR cc_mainLitColor\n      #define CC_AMBIENTSKY cc_ambientSky\n      #define CC_AMBIENTGROUND cc_ambientGround\n      #define CC_FOGCOLOR cc_fogColor\n      #define CC_FOGBASE cc_fogBase\n      #define CC_FOGADD cc_fogAdd\n      #define CC_NEARFAR cc_nearFar\n      #define CC_VIEWPORT cc_viewPort\n  #endif\nvarying mediump vec2 v_uv;\nvarying mediump vec3 v_position;\nuniform sampler2D inputTexture;\nvoid main () {\n  vec2 uv = v_uv;\n  vec3 col = texture2D(inputTexture, v_uv).rgb;\n  uv *= 1.0 - uv.yx;\n  float vig = uv.x * uv.y * 30.0;\n  vig = pow(vig, 0.25);\n  vig = clamp(vig, 0.0, 1.0);\n  gl_FragColor = vec4( col * vig, 1.0 );\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCameraMVR","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":116,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":118}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"}]}],[{"passes":[{"pass":"post-process","properties":null,"program":"../materials/vignette|vs|fs","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":0}]},"depthStencilState":{"depthTest":false,"depthWrite":false}}]}]]],0,0,[],[],[]],[[[5,"Vignette",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[2],[14]]]]
